- name: "Pycharm | Desktop | Set edition install location"
  ansible.builtin.set_fact:
    pycharm_edition_dir: "{{ pycharm_path }}/{{ edition }}"


- name: "Pycharm | Desktop | Stat edition install directory"
  ansible.builtin.stat:
    path:  "{{ pycharm_edition_dir }}"
  register: pycharm_edition_dir_state


- name: "Pycharm | Desktop | Set desktop file name"
  ansible.builtin.set_fact:
    desktop_file_name: "pycharm-{{ edition }}.desktop"
  when:
    - pycharm_edition_dir_state.stat.exists


- name: "Pycharm | Desktop | Set desktop file path"
  ansible.builtin.set_fact:
    desktop_file_path: "/usr/share/applications/{{ desktop_file_name }}"
  when:
    - pycharm_edition_dir_state.stat.exists


- name: "Pycharm | Desktop | Create desktop entry"
  ansible.builtin.copy:
    src: desktop-entry.desktop
    dest: "{{ desktop_file_path }}"
    force: no
    owner: "root"
    group: "root"
    mode: 0664
  when:
    - desktop_file_name is defined


- name: "Pycharm | Desktop | Stat desktop entry"
  ansible.builtin.stat:
    path:  "{{ pycharm_edition_dir }}"
  register: pycharm_edition_dir_state


- name: "Pycharm | Desktop | Set desktop entry name"
  ansible.builtin.lineinfile:
    path: "{{ desktop_file_path }}"
    regexp: "^Name="
    line: "Name=pycharm-{{ edition }}"
  when:
    - pycharm_edition_dir_state.stat.exists


- name: "Pycharm | Desktop | Set desktop entry icon"
  ansible.builtin.lineinfile:
    path: "{{ desktop_file_path }}"
    regexp: "^Icon="
    line: "Icon={{ pycharm_edition_dir }}/bin/pycharm.svg"
  when:
    - pycharm_edition_dir_state.stat.exists

- name: "Pycharm | Desktop | Set desktop entry binary"
  ansible.builtin.lineinfile:
    path: "{{ desktop_file_path }}"
    regexp: "^Exec="
    line: "Exec=\"{{ pycharm_edition_dir }}/bin/pycharm.sh\" %f"
  when:
    - pycharm_edition_dir_state.stat.exists


- name: "Pycharm | Desktop | Validate desktop entry"
  ansible.builtin.shell:
    cmd: "desktop-file-validate {{ desktop_file_path }}"
  when:
    - pycharm_edition_dir_state.stat.exists
